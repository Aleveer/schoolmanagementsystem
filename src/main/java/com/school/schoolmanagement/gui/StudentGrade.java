/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.school.schoolmanagement.gui;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.table.*;

import com.school.schoolmanagement.bus.PersonBUS;
import com.school.schoolmanagement.bus.StudentGradeBUS;
import com.school.schoolmanagement.models.PersonModel;
import com.school.schoolmanagement.models.StudentGradeModel;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

/**
 *
 * @author yanti
 */
public class StudentGrade extends JPanel {
    List<PersonModel> personList = PersonBUS.getInstance().getAllModels();
    List<PersonModel> studentList1 = new ArrayList<>(personList);

    List<StudentGradeModel> studentList = StudentGradeBUS.getInstance().getAllModels();
    List<Integer> personIds = personList.stream()
            .map(PersonModel::getPersonID)
            .collect(Collectors.toList());
    List<StudentGradeModel> filteredStudentList = studentList.stream()
            .filter(student -> personIds.contains(student.getStudentID()))
            .collect(Collectors.toList());

    /**
     * Creates new form StudentGrade
     */
    public StudentGrade() {
        initComponents();
        setBorder(new EmptyBorder(10, 10, 10, 10));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        GridBagConstraints gridBagConstraints;

        panelHeader = new JPanel();
        panelInfor = new JPanel();
        panelPerson = new JPanel();
        labelPersonID = new JLabel();
        txtPersonID = new JTextField();
        labelLastName = new JLabel();
        txtLastName = new JTextField();
        labelFirstName = new JLabel();
        txtFirstName = new JTextField();
        buttonAdd = new JButton();
        panelNewGrade = new JPanel();
        labelTitle = new JLabel();
        txtTitle = new JTextField();
        labelGrade = new JLabel();
        txtGrade = new JTextField();
        buttonSave = new JButton();
        scrollPane1 = new JScrollPane();
        tableGrade = new JTable();
        panelStudent = new JPanel();
        scrollPane2 = new JScrollPane();
        tableStudent = new JTable();
        panelSearch = new JPanel();
        txtSearch = new JTextField();
        buttonSearch = new JButton();

        setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        setLayout(new BorderLayout());

        panelHeader.setPreferredSize(new Dimension(635, 180));
        panelHeader.setLayout(new GridLayout());

        panelInfor.setLayout(new BorderLayout());

        panelPerson.setLayout(new GridBagLayout());

        labelPersonID.setText("Person ID");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        panelPerson.add(labelPersonID, gridBagConstraints);

        txtPersonID.setPreferredSize(new Dimension(120, 22));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        panelPerson.add(txtPersonID, gridBagConstraints);

        labelLastName.setText("Last Name");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        panelPerson.add(labelLastName, gridBagConstraints);

        txtLastName.setPreferredSize(new Dimension(120, 22));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        panelPerson.add(txtLastName, gridBagConstraints);

        labelFirstName.setText("First Name");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        panelPerson.add(labelFirstName, gridBagConstraints);

        txtFirstName.setPreferredSize(new Dimension(120, 22));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        panelPerson.add(txtFirstName, gridBagConstraints);

        buttonAdd.setText("Add");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        panelPerson.add(buttonAdd, gridBagConstraints);

        panelInfor.add(panelPerson, BorderLayout.WEST);

        panelNewGrade.setBorder(BorderFactory.createTitledBorder("Grade"));
        panelNewGrade.setPreferredSize(new Dimension(200, 200));
        panelNewGrade.setLayout(new GridBagLayout());

        labelTitle.setText("Title");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        panelNewGrade.add(labelTitle, gridBagConstraints);

        txtTitle.setPreferredSize(new Dimension(120, 22));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        panelNewGrade.add(txtTitle, gridBagConstraints);

        labelGrade.setText("Grade");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        panelNewGrade.add(labelGrade, gridBagConstraints);

        txtGrade.setPreferredSize(new Dimension(120, 22));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        panelNewGrade.add(txtGrade, gridBagConstraints);

        buttonSave.setText("Save");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        panelNewGrade.add(buttonSave, gridBagConstraints);

        panelInfor.add(panelNewGrade, BorderLayout.CENTER);
        buttonAdd.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent arg0) {
                addPerson();
            }
        });

        panelHeader.add(panelInfor);
        String[] columnNames = { "EnrollmentID", "CourseID", "StudentID", "Grade" };
        Object[][] data = new Object[filteredStudentList.size()][4];
        System.out.println(" " + filteredStudentList.size());
        for (int i = 0; i < filteredStudentList.size(); i++) {
            StudentGradeModel studentGradeModel = filteredStudentList.get(i);
            data[i][0] = studentGradeModel.getEnrollmentID();
            data[i][1] = studentGradeModel.getCourseID();
            data[i][2] = studentGradeModel.getStudentID();
            data[i][3] = studentGradeModel.getGrade();
        }
        DefaultTableModel model = new DefaultTableModel(data, columnNames);
        tableGrade.setModel(model);

        tableGrade.setMaximumSize(new Dimension(60, 80));
        tableGrade.setPreferredSize(new Dimension(100, 80));
        scrollPane1.setViewportView(tableGrade);

        panelHeader.add(scrollPane1);

        add(panelHeader, BorderLayout.NORTH);

        panelStudent.setLayout(new BorderLayout());
        //TODO: Didn't appear on GUI. fix
        String[] columnNames1 = { "PersonID", "LastName", "FirstName", "EnrollmentDate" };
        Object[][] data1 = new Object[studentList1.size()][4];
        System.out.println(" " + studentList1.size());
        for (int i = 0; i < studentList1.size(); i++) {
            PersonModel student = studentList1.get(i);
            if (student.getHireDate() == null) {
                data[i][0] = student.getPersonID();
                data[i][1] = student.getLastName();
                data[i][2] = student.getFirstName();
                data[i][3] = student.getEnrollmentDate();
            } else {
                studentList1.remove(i);
            }
        }
        DefaultTableModel model1 = new DefaultTableModel(data1, columnNames1);
        tableStudent.setModel(model1);
        scrollPane2.setViewportView(tableStudent);

        panelStudent.add(scrollPane2, BorderLayout.CENTER);

        txtSearch.setPreferredSize(new Dimension(160, 22));
        panelSearch.add(txtSearch);

        buttonSearch.setText("Search");
        panelSearch.add(buttonSearch);

        panelStudent.add(panelSearch, BorderLayout.SOUTH);

        add(panelStudent, BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void addPerson() {
        int personId = Integer.parseInt(txtPersonID.getText().toString());
        String lastName = txtLastName.getText().toString();
        String firstName = txtFirstName.getText().toString();
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton buttonAdd;
    private JButton buttonSave;
    private JButton buttonSearch;
    private JLabel labelFirstName;
    private JLabel labelGrade;
    private JLabel labelLastName;
    private JLabel labelPersonID;
    private JLabel labelTitle;
    private JPanel panelHeader;
    private JPanel panelInfor;
    private JPanel panelNewGrade;
    private JPanel panelPerson;
    private JPanel panelSearch;
    private JPanel panelStudent;
    private JScrollPane scrollPane1;
    private JScrollPane scrollPane2;
    private JTable tableGrade;
    private JTable tableStudent;
    private JTextField txtFirstName;
    private JTextField txtGrade;
    private JTextField txtLastName;
    private JTextField txtPersonID;
    private JTextField txtSearch;
    private JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
